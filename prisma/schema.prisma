// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  first_name    String        @db.VarChar(50)
  last_name     String        @db.VarChar(50)
  phone         String?       @db.VarChar(15)
  email         String        @unique @db.VarChar(100)
  password_hash String        @db.Char(60)
  avatar_url    String?       @db.VarChar(255)
  job_title     String?       @db.VarChar(255)
  roles         Role[]
  tokens        UserToken[]
}

model UserToken {
  id            String        @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  expires_at    DateTime
  user_id       String        @db.Uuid
  user          User          @relation(fields: [user_id], references: [id])
}

model Role {
  id            String        @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  name          String        @unique @db.VarChar(50)
  priority      Int
  users         User[]
  permissions   Permission[]
}

model Permission {
  id            String        @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
  name          String        @unique @db.VarChar(100)
  roles         Role[]
}
